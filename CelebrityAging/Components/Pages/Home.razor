@page "/"

@using Microsoft.EntityFrameworkCore
@using Core.Entities
@inject IDbContextFactory<Persistance.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<PageTitle>Home</PageTitle>

<div>
 
    @if (person is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
    <h2>@person.Name</h2>
    <a href="" @onclick="Randomize">Get Random </a> 

    <hr />
        <dl class="row">
            <dt class="col-sm-2">Name</dt>
            <dd class="col-sm-10">@person.Name</dd>
            <dt class="col-sm-2">Born</dt>
            <dd class="col-sm-10">@person.BirthDate</dd>
            <!--
            <dt class="col-sm-2">CountryId</dt>
            <dd class="col-sm-10">@person.CountryId</dd>
            -->
        </dl>
        @if(person.Pictures.Count > 0) {
          <div style="display: flex;flex-direction: column; max-width: 500px;">
           @foreach(var picture in person.Pictures) 
            {
                <img  style="width: 100%; height: 100%; object-fit: cover;border-radius: 10px" src="@picture.Link">
                <br>
            }
          </div> 
        }
      else {
        <div> Pictures will be added soon </div>
      }
    }
</div>

@code {
    private Person? person;

    protected override async Task OnInitializedAsync()
    {
    using var context = DbFactory.CreateDbContext();
         Random rand = new Random();  
         int skipper = rand.Next(0, context.Person.Count());  
  
        person = context  
        .Person  
        .OrderBy(product => Guid.NewGuid())
        .Skip(skipper)  
        .Take(1)  
        .Include(p => p.Pictures)
        .ToList().First();  
      
        if (person is null)
        {
            NavigationManager.NavigateTo("notfound");
        }    }

    public void Randomize() {
    
         NavigationManager.NavigateTo("/", true);

    }
}
